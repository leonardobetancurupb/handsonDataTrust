services: 

  db:
    image: mongo:latest
    container_name: mongodb-container
    ports:
      - '27017:27017'
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    volumes:
      - mongo-data:/data/db
    networks:
      - backend

  backend:
    build: ./backend
    hostname: backend
    # command: python -m http.server -d /code 8001
    command: /bin/sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    networks:
      - backend
    volumes:
      - ./backend/src:/code
    depends_on:
      db:
        condition: service_started
    environment:
      - MONGO_USERNAME=root
      - MONGO_PASSWORD=rootpassword
    expose:
      - "8000"

  frontend:
    build: ./frontend
    hostname: frontend
    command: /bin/sh -c "python manage.py makemigrations && python manage.py migrate  && python manage.py runserver 0.0.0.0:80"
    ports:
      - "80:80"
    networks:
      - frontend
      - backend
    volumes:
      - ./frontend/main:/code
    depends_on:
      backend:
        condition: service_started
      audit-app:
        condition: service_started
    expose:
      - "80"

  audit-app:
    build: ./audit
    hostname: audit
    command: python app.py
    networks:
      - backend
    volumes:
      - ./audit/src:/code
    ports:
      - "5000:5000"
    expose:
      - "5000"

networks:
  backend:
  frontend:

volumes:
    mongo-data:
    sender-app: 
